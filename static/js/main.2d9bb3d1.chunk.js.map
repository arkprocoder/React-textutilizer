{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","setMystyle","btnTxt","setBtnTxt","className","style","onClick","type","id","Navbar","props","console","log","mode","to","title","aboutText","toogleModePurple","htmlFor","toogleModeBlue","toogleModeGreen","toogleMode","TextForm","text","setText","heading","value","onChange","e","target","rows","newTxt","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","msg","defaultProps","App","setDarkMode","modePurple","setDarkModePurple","modeBlue","setDarkModeBlue","modeGreen","setDarkModeGreen","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d9bb3d1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  let mystyle = {\r\n    color: \"white\",\r\n    backgroundColor: \"black\",\r\n  };\r\n  const [myStyle, setMystyle] = useState(mystyle);\r\n  const [btnTxt, setBtnTxt] = useState(\"Enable Dark Mode\");\r\n\r\n  const toggleStyle =()=>{\r\n    if(myStyle.color=='white'){\r\n        setMystyle({\r\n            color:'black',\r\n            backgroundColor:'white'\r\n        }\r\n        \r\n        )\r\n        setBtnTxt(\"Enable Dark Mode\")\r\n   \r\n    }\r\n    else{\r\n        setMystyle({\r\n            color:'white',\r\n            backgroundColor:'black'\r\n        })\r\n        setBtnTxt(\"Enable Light Mode\")\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-3 my-3\" style={myStyle}>\r\n        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n  <button className=\"btn btn-light me-md-2 mt-2\" onClick= {toggleStyle}type=\"button\">{btnTxt}</button>\r\n  {/* <button className=\"btn btn-primary\" type=\"button\">Button</button> */}\r\n</div>\r\n      <h1>About US</h1>\r\n      <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#panelsStayOpen-collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"panelsStayOpen-collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"panelsStayOpen-collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"panelsStayOpen-headingOne\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees\r\n              control the overall appearance, as well as the showing and hiding\r\n              via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"../Theme.css\"\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  console.log('Its working')\r\n\r\n\r\n    return (\r\n       <>\r\n      \r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li>\r\n       \r\n    \r\n      </ul>\r\n      \r\n\r\n<div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogleModePurple} />\r\n  <label className={`form-check-label text-${props.mode==='purple'?'info':'info'}`} htmlFor=\"flexSwitchCheckDefault\">Purple Mode</label>\r\n</div>\r\n\r\n<div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogleModeBlue} />\r\n  <label className={`form-check-label text-${props.mode==='blue'?'primary':'primary'}`} htmlFor=\"flexSwitchCheckDefault\">Blue Mode</label>\r\n</div>\r\n\r\n<div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogleModeGreen} />\r\n  <label className={`form-check-label text-${props.mode==='green'?'success':'success'}`} htmlFor=\"flexSwitchCheckDefault\">Green Mode</label>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toogleMode} />\r\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n\r\n\r\n\r\n</div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n\r\n</>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes= {title:PropTypes.string.isRequired,aboutText:PropTypes.string}\r\n\r\nNavbar.defaultProps = {\r\n    title:'SET TITLE HERE',\r\n    aboutText : 'Set About us'\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"Enter Text Here\");\r\n  // text=\"mnjn\" //wrong way to change\r\n  const handleClick = () => {\r\n    // console.log(\"uper case is clicked\" + text);\r\n    let newTxt = text.toUpperCase();\r\n    setText(newTxt);\r\n    props.showAlert(\"Converted to Uppercase\",\"info\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"uper case is clicked\" + text);\r\n    let newTxt = text.toLowerCase();\r\n    setText(newTxt);\r\n    props.showAlert(\"Converted to LowerCase\",\"info\");\r\n  };\r\n  const handleOnChange = (e) => {\r\n    // console.log(\"Done 2 Bro\");\r\n\r\n    setText(e.target.value);\r\n  };\r\n  const handleClear = () => {\r\n    \r\n    let newTxt = ''\r\n    setText(newTxt);\r\n  };\r\n  return (\r\n      <>\r\n    <div>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <div className=\"mb-3\">\r\n          <br />\r\n          <h2 > {props.heading}- </h2>\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            Analize\r\n          </label>\r\n          <textarea\r\n          style={{backgroundColor:props.mode==='dark'?'lightgrey':'white'}}\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"3\"\r\n            \r\n          ></textarea>\r\n        </div>\r\n        <button style={{color:props.mode==='dark'?'white':'dark'}}onClick={handleClick} className=\"btn btn-primary mx-2\">\r\n          Convert To UpperCase\r\n        </button>\r\n        <button onClick={handleLoClick} className=\"btn btn-primary mx-2\">\r\n          Convert To LowerCase\r\n        </button>\r\n        <button onClick={handleClear} className=\"btn btn-primary mx-2\">\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n        <h2>PreView </h2>\r\n        <h6>{text.length>0?text:'Enter the Text Something'}</h6>\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong></strong>{props.alert.msg}\r\n\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setDarkMode] = useState(\"light\");\n  const [modePurple, setDarkModePurple] = useState(\"light\");\n  const [modeBlue, setDarkModeBlue] = useState(\"light\");\n  const [modeGreen, setDarkModeGreen] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toogleMode = () => {\n    if (mode === \"light\") {\n      setDarkMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled\", \"primary\");\n    } else {\n      setDarkMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n \n      showAlert(\"Light Mode has been enabled\", \"dark\");\n    }\n  };\n\n  const toogleModePurple = () => {\n    if (modePurple === \"light\") {\n      setDarkMode(\"dark\");\n      setDarkModePurple(\"dark\");\n      document.body.style.backgroundColor = \"purple\";\n      showAlert(\"Purple Mode has been enabled\", \"dark\");\n    } else {\n      setDarkModePurple(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"dark\");\n    }\n  };\n  const toogleModeBlue = () => {\n    if (modeBlue === \"light\") {\n      setDarkMode(\"dark\");\n      setDarkModeBlue(\"dark\");\n      document.body.style.backgroundColor = \"blue\";\n      showAlert(\"Blue Mode has been enabled\", \"primary\");\n    } else {\n      setDarkModeBlue(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"dark\");\n    }\n  };\n  const toogleModeGreen = () => {\n    if (modeGreen === \"light\") {\n      setDarkMode(\"dark\");\n      setDarkModeBlue(\"dark\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"Green Mode has been enabled\", \"success\");\n    } else {\n      setDarkModeGreen(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"dark\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"ARK PRO CODER\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toogleMode={toogleMode}\n          toogleModePurple={toogleModePurple}\n          toogleModeBlue={toogleModeBlue}\n          toogleModeGreen={toogleModeGreen}\n        />\n        <Alert alert={alert} />\n        {/* <Navbar /> */}\n        <Switch>\n        <Route exact path=\"/\">\n            <TextForm\n              heading=\"Enter the Text \"\n              mode={mode}\n              showAlert={showAlert}\n            />\n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}